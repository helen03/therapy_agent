[{"/Users/liuyanjun/Downloads/satbot-master/view/src/index.js":"1","/Users/liuyanjun/Downloads/satbot-master/view/src/App.js":"2","/Users/liuyanjun/Downloads/satbot-master/view/src/MessageParser.js":"3","/Users/liuyanjun/Downloads/satbot-master/view/src/config.js":"4","/Users/liuyanjun/Downloads/satbot-master/view/src/ActionProvider.js":"5","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ProtocolOptions.jsx":"6","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ContinueOptions.jsx":"7","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/FeedbackOptions.jsx":"8","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EmotionOptions.jsx":"9","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx":"10","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoOptions.jsx":"11","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EventOptions.jsx":"12","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/Options/Options.jsx":"13","/Users/liuyanjun/therapy_agent/frontend/src/index.js":"14","/Users/liuyanjun/therapy_agent/frontend/src/App.js":"15","/Users/liuyanjun/therapy_agent/frontend/src/ActionProvider.js":"16","/Users/liuyanjun/therapy_agent/frontend/src/config.js":"17","/Users/liuyanjun/therapy_agent/frontend/src/MessageParser.js":"18","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ProtocolOptions.jsx":"19","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoOptions.jsx":"20","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ContinueOptions.jsx":"21","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/FeedbackOptions.jsx":"22","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EventOptions.jsx":"23","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx":"24","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EmotionOptions.jsx":"25","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/Options/Options.jsx":"26","/Users/liuyanjun/therapy_agent/frontend/src/Login.js":"27","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/InitialOptions.jsx":"28","/Users/liuyanjun/therapy_agent/frontend/src/components/WaveBackground.js":"29","/Users/liuyanjun/therapy_agent/frontend/src/components/ParticleBackground.js":"30","/Users/liuyanjun/therapy_agent/frontend/src/components/BrandBadges.js":"31","/Users/liuyanjun/therapy_agent/frontend/src/components/UIElements.js":"32","/Users/liuyanjun/therapy_agent/frontend/src/components/EnhancedDemoInfo.js":"33","/Users/liuyanjun/therapy_agent/frontend/src/components/SocialLogin.js":"34","/Users/liuyanjun/therapy_agent/frontend/src/LoginSimple.js":"35"},{"size":261,"mtime":1686244282000,"results":"36","hashOfConfig":"37"},{"size":513,"mtime":1686244282000,"results":"38","hashOfConfig":"37"},{"size":2538,"mtime":1686244282000,"results":"39","hashOfConfig":"37"},{"size":3051,"mtime":1686244282000,"results":"40","hashOfConfig":"37"},{"size":7277,"mtime":1686244282000,"results":"41","hashOfConfig":"37"},{"size":704,"mtime":1686244282000,"results":"42","hashOfConfig":"37"},{"size":407,"mtime":1686244282000,"results":"43","hashOfConfig":"37"},{"size":801,"mtime":1686244282000,"results":"44","hashOfConfig":"37"},{"size":1221,"mtime":1686244282000,"results":"45","hashOfConfig":"37"},{"size":699,"mtime":1686244282000,"results":"46","hashOfConfig":"37"},{"size":583,"mtime":1686244282000,"results":"47","hashOfConfig":"37"},{"size":607,"mtime":1686244282000,"results":"48","hashOfConfig":"37"},{"size":684,"mtime":1686244282000,"results":"49","hashOfConfig":"37"},{"size":261,"mtime":1686244282000,"results":"50","hashOfConfig":"51"},{"size":4662,"mtime":1756094355110,"results":"52","hashOfConfig":"51"},{"size":7354,"mtime":1756037730692,"results":"53","hashOfConfig":"51"},{"size":3002,"mtime":1756089742422,"results":"54","hashOfConfig":"51"},{"size":2570,"mtime":1756041342616,"results":"55","hashOfConfig":"51"},{"size":704,"mtime":1686244282000,"results":"56","hashOfConfig":"51"},{"size":583,"mtime":1686244282000,"results":"57","hashOfConfig":"51"},{"size":407,"mtime":1686244282000,"results":"58","hashOfConfig":"51"},{"size":801,"mtime":1686244282000,"results":"59","hashOfConfig":"51"},{"size":607,"mtime":1686244282000,"results":"60","hashOfConfig":"51"},{"size":699,"mtime":1686244282000,"results":"61","hashOfConfig":"51"},{"size":1221,"mtime":1686244282000,"results":"62","hashOfConfig":"51"},{"size":684,"mtime":1686244282000,"results":"63","hashOfConfig":"51"},{"size":21008,"mtime":1756093894756,"results":"64","hashOfConfig":"51"},{"size":1043,"mtime":1756089758913,"results":"65","hashOfConfig":"51"},{"size":2999,"mtime":1756091917631,"results":"66","hashOfConfig":"51"},{"size":5544,"mtime":1756091903710,"results":"67","hashOfConfig":"51"},{"size":3881,"mtime":1756092273943,"results":"68","hashOfConfig":"51"},{"size":2330,"mtime":1756091990076,"results":"69","hashOfConfig":"51"},{"size":6530,"mtime":1756092324426,"results":"70","hashOfConfig":"51"},{"size":4023,"mtime":1756092134855,"results":"71","hashOfConfig":"51"},{"size":11719,"mtime":1756094311411,"results":"72","hashOfConfig":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iqtqvg",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1i2ped5",{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/liuyanjun/Downloads/satbot-master/view/src/index.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/App.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/MessageParser.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/config.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/ActionProvider.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ProtocolOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ContinueOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/FeedbackOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EmotionOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EventOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/Options/Options.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/index.js",[],["147","148"],"/Users/liuyanjun/therapy_agent/frontend/src/App.js",["149"],"/Users/liuyanjun/therapy_agent/frontend/src/ActionProvider.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/config.js",["150"],"// Config starter code\r\nimport React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport YesNoOptions from \"./widgets/options/GeneralOptions/YesNoOptions\";\r\nimport ProtocolOptions from \"./widgets/options/GeneralOptions/ProtocolOptions\";\r\nimport ContinueOptions from \"./widgets/options/GeneralOptions/ContinueOptions\";\r\nimport FeedbackOptions from \"./widgets/options/GeneralOptions/FeedbackOptions\";\r\nimport EmotionOptions from \"./widgets/options/GeneralOptions/EmotionOptions\";\r\nimport EventOptions from \"./widgets/options/GeneralOptions/EventOptions\";\r\nimport YesNoProtocolOptions from \"./widgets/options/GeneralOptions/YesNoProtocolsOptions\";\r\nimport InitialOptions from \"./widgets/options/GeneralOptions/InitialOptions\";\r\n\r\n// import Kai from \"./Kai.png\"\r\n\r\nconst botName = \"MindGuide\";\r\n\r\n// export const getPersona = () => {\r\n\r\n//   return <img src={Kai} width=\"50\" height=\"50\" alt=\"\"/>;\r\n\r\n// };\r\n\r\n\r\nconst config = {\r\n  botName: botName,\r\n  initialMessages: [], // Will be populated dynamically based on login status\r\n\r\n  state: {\r\n    userState: null,\r\n    username: null,\r\n    password: null,\r\n    sessionID: null,\r\n    protocols: [],\r\n    askingForProtocol: false,\r\n    initialChoices: []\r\n  },\r\n\r\n  customComponents: {\r\n    header: () => <div style={{height: '15px', fontFamily: 'Trebuchet MS', fontSize: \"1em\", textAlign: \"center\", color: '#fff', paddingTop: '1em', paddingBottom: '1em'}}>MindGuide</div>,\r\n    // botAvatar: (props) => <div class=\"react-chatbot-kit-chat-bot-avatar-container\" style={{fontFamily: 'Arial'}}>\r\n    //   {getPersona()} </div>\r\n    },\r\n\r\n  widgets: [\r\n    {\r\n      widgetName: \"YesNo\",\r\n      widgetFunc: (props) => <YesNoOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Continue\",\r\n      widgetFunc: (props) => <ContinueOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Emotion\",\r\n      widgetFunc: (props) => <EmotionOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Feedback\",\r\n      widgetFunc: (props) => <FeedbackOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Protocol\",\r\n      widgetFunc: (props) => <ProtocolOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\", \"protocols\", \"askingForProtocol\"],\r\n    },\r\n    {\r\n      widgetName: \"YesNoProtocols\",\r\n      widgetFunc: (props) => <YesNoProtocolOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"RecentDistant\",\r\n      widgetFunc: (props) => <EventOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"InitialOptions\",\r\n      widgetFunc: (props) => <InitialOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\", \"initialChoices\"],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default config;\r\n","/Users/liuyanjun/therapy_agent/frontend/src/MessageParser.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ProtocolOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ContinueOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/FeedbackOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EventOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EmotionOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/Options/Options.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/Login.js",["151","152","153"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport './Login.css';\nimport './LoginEnhanced.css';\nimport ParticleBackground from './components/ParticleBackground';\nimport WaveBackground from './components/WaveBackground';\nimport { LoadingSpinner, StepIndicator } from './components/UIElements';\nimport SocialLogin from './components/SocialLogin';\nimport BrandBadges from './components/BrandBadges';\nimport EnhancedDemoInfo from './components/EnhancedDemoInfo';\n\nconst Login = ({ onLogin, onRegister }) => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [formErrors, setFormErrors] = useState({\n    username: '',\n    password: '',\n    email: ''\n  });\n  const [touched, setTouched] = useState({\n    username: false,\n    password: false,\n    email: false\n  });\n  const [showSocialLogin, setShowSocialLogin] = useState(false);\n  const [formProgress, setFormProgress] = useState(0);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [showDemoInfo, setShowDemoInfo] = useState(false);\n\n  const apiBaseUrl = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5002';\n  const usernameRef = useRef(null);\n\n  // 表单验证规则\n  const validationRules = {\n    username: {\n      required: true,\n      minLength: 3,\n      maxLength: 20,\n      pattern: /^[a-zA-Z0-9_]+$/,\n      message: '用户名必须是3-20个字符，只能包含字母、数字和下划线'\n    },\n    password: {\n      required: true,\n      minLength: 6,\n      message: '密码至少需要6个字符'\n    },\n    email: {\n      required: false,\n      pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n      message: '请输入有效的邮箱地址'\n    }\n  };\n\n  // 实时验证函数\n  const validateField = useCallback((fieldName, value) => {\n    const rules = validationRules[fieldName];\n    if (!rules) return '';\n\n    if (rules.required && !value.trim()) {\n      return `${fieldName === 'username' ? '用户名' : fieldName === 'password' ? '密码' : '邮箱'}不能为空`;\n    }\n\n    if (value && rules.minLength && value.length < rules.minLength) {\n      return rules.message;\n    }\n\n    if (value && rules.maxLength && value.length > rules.maxLength) {\n      return `${fieldName === 'username' ? '用户名' : '邮箱'}不能超过${rules.maxLength}个字符`;\n    }\n\n    if (value && rules.pattern && !rules.pattern.test(value)) {\n      return rules.message;\n    }\n\n    return '';\n  }, []);\n\n  // 防抖函数\n  const debounce = (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n\n  // 防抖验证函数\n  const debouncedValidate = useCallback(\n    debounce((fieldName, value) => {\n      const error = validateField(fieldName, value);\n      setFormErrors(prev => ({\n        ...prev,\n        [fieldName]: error\n      }));\n    }, 300),\n    [validateField]\n  );\n\n  // 计算表单完成进度\n  const calculateFormProgress = useCallback(() => {\n    let progress = 0;\n    const fields = ['username', 'password'];\n    if (!isLogin) fields.push('email');\n    \n    fields.forEach(field => {\n      const value = field === 'username' ? username : \n                   field === 'password' ? password : email;\n      if (value && !validateField(field, value)) {\n        progress += 100 / fields.length;\n      }\n    });\n    \n    setFormProgress(Math.round(progress));\n  }, [username, password, email, isLogin, validateField]);\n\n  // 处理输入变化\n  const handleInputChange = (fieldName, value) => {\n    switch (fieldName) {\n      case 'username':\n        setUsername(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      default:\n        break;\n    }\n\n    // 使用防抖验证\n    debouncedValidate(fieldName, value);\n    // 更新进度\n    calculateFormProgress();\n  };\n\n  // 处理失焦事件\n  const handleBlur = (fieldName) => {\n    setTouched(prev => ({\n      ...prev,\n      [fieldName]: true\n    }));\n  };\n\n  // 检查表单是否有效\n  const isFormValid = useCallback(() => {\n    const usernameError = validateField('username', username);\n    const passwordError = validateField('password', password);\n    const emailError = isLogin ? '' : validateField('email', email);\n\n    return !usernameError && !passwordError && !emailError && username && password;\n  }, [username, password, email, isLogin, validateField]);\n\n  // 从本地存储加载记住的凭据\n  useEffect(() => {\n    const savedCredentials = localStorage.getItem('rememberedCredentials');\n    if (savedCredentials) {\n      try {\n        const { username: savedUsername, remember: savedRemember } = JSON.parse(savedCredentials);\n        if (savedRemember) {\n          setUsername(savedUsername);\n          setRememberMe(true);\n        }\n      } catch (error) {\n        console.error('Error loading saved credentials:', error);\n      }\n    }\n  }, []);\n\n  // 组件加载时聚焦用户名输入框\n  useEffect(() => {\n    if (usernameRef.current) {\n      usernameRef.current.focus();\n    }\n  }, []);\n\n  // 处理键盘事件\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (isFormValid()) {\n        handleSubmit(e);\n      }\n    }\n  };\n\n  // 处理社交登录\n  const handleSocialLogin = (provider) => {\n    console.log(`Social login with ${provider}`);\n    // 这里可以添加实际的社交登录逻辑\n    setSuccessMessage(`正在连接到 ${provider}...`);\n    setShowSuccess(true);\n    setTimeout(() => setShowSuccess(false), 3000);\n  };\n\n  // 处理模式切换\n  const handleModeSwitch = () => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setIsLogin(!isLogin);\n      setError('');\n      setFormProgress(0);\n      setIsTransitioning(false);\n    }, 300);\n  };\n\n  // 显示成功消息\n  const showSuccessMessage = (message) => {\n    setSuccessMessage(message);\n    setShowSuccess(true);\n    setTimeout(() => setShowSuccess(false), 3000);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // 标记所有字段为已触摸\n    setTouched({\n      username: true,\n      password: true,\n      email: true\n    });\n\n    // 验证所有字段\n    const usernameError = validateField('username', username);\n    const passwordError = validateField('password', password);\n    const emailError = isLogin ? '' : validateField('email', email);\n\n    setFormErrors({\n      username: usernameError,\n      password: passwordError,\n      email: emailError\n    });\n\n    // 如果有错误，不提交\n    if (usernameError || passwordError || emailError) {\n      return;\n    }\n\n    setError('');\n    setLoading(true);\n\n    try {\n      if (isLogin) {\n        // Login logic\n        const response = await axios.post(`${apiBaseUrl}/api/login`, {\n          user_info: { username, password }\n        });\n\n        if (response.data.success && response.data.validID) {\n          showSuccessMessage('登录成功！正在跳转...');\n          // 处理记住我功能\n          if (rememberMe) {\n            localStorage.setItem('rememberedCredentials', JSON.stringify({\n              username,\n              remember: true\n            }));\n          } else {\n            localStorage.removeItem('rememberedCredentials');\n          }\n\n          setTimeout(() => {\n            onLogin({\n              userID: response.data.userID,\n              sessionID: response.data.sessionID,\n              token: response.data.token,\n              username: username,\n              model_prompt: response.data.model_prompt,\n              choices: response.data.choices\n            });\n          }, 1500);\n        } else {\n          setError(response.data.error || '登录失败');\n        }\n      } else {\n        // Register logic\n        const response = await axios.post(`${apiBaseUrl}/api/register`, {\n          user_info: { username, password, email }\n        });\n\n        if (response.data.success) {\n          showSuccessMessage('注册成功！正在自动登录...');\n          // Auto-login after registration\n          const loginResponse = await axios.post(`${apiBaseUrl}/api/login`, {\n            user_info: { username, password }\n          });\n\n          if (loginResponse.data.success && loginResponse.data.validID) {\n            // 处理记住我功能\n            if (rememberMe) {\n              localStorage.setItem('rememberedCredentials', JSON.stringify({\n                username,\n                remember: true\n              }));\n            }\n\n            setTimeout(() => {\n              onRegister({\n                userID: loginResponse.data.userID,\n                sessionID: loginResponse.data.sessionID,\n                token: loginResponse.data.token,\n                username: username\n              });\n            }, 1500);\n          }\n        } else {\n          setError(response.data.error || '注册失败');\n        }\n      }\n    } catch (error) {\n      console.error('Authentication error:', error);\n      setError(error.response?.data?.error || '认证失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container enhanced\">\n      {/* 增强背景效果 */}\n      <ParticleBackground />\n      <WaveBackground />\n      \n      {/* 浮动几何形状 */}\n      <div className=\"floating-shapes\">\n        <div className=\"shape\"></div>\n        <div className=\"shape\"></div>\n        <div className=\"shape\"></div>\n        <div className=\"shape\"></div>\n        <div className=\"shape\"></div>\n      </div>\n\n      {/* 成功提示 */}\n      {showSuccess && (\n        <div className=\"success-notification\">\n          <div className=\"success-icon\">✓</div>\n          <div className=\"success-message\">{successMessage}</div>\n        </div>\n      )}\n\n      <div className={`login-form ${isTransitioning ? 'transitioning' : ''}`}>\n        {/* 品牌标识区域 */}\n        <div className=\"brand-section\">\n          <div className=\"brand-logo\">\n            <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"24\" cy=\"24\" r=\"20\" fill=\"url(#brainGradient)\"/>\n              <path d=\"M24 12C18 12 14 16 14 22C14 26 16 28 18 28C20 28 22 26 22 24C22 22 20 20 18 20\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n              <path d=\"M24 12C30 12 34 16 34 22C34 26 32 28 30 28C28 28 26 26 26 24C26 22 28 20 30 20\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n              <path d=\"M20 28C20 30 22 32 24 32C26 32 28 30 28 28\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n              <circle cx=\"20\" cy=\"22\" r=\"1.5\" fill=\"white\"/>\n              <circle cx=\"28\" cy=\"22\" r=\"1.5\" fill=\"white\"/>\n              <defs>\n                <linearGradient id=\"brainGradient\" x1=\"24\" y1=\"4\" x2=\"24\" y2=\"44\" gradientUnits=\"userSpaceOnUse\">\n                  <stop stopColor=\"#6366f1\"/>\n                  <stop offset=\"1\" stopColor=\"#8b5cf6\"/>\n                </linearGradient>\n              </defs>\n            </svg>\n          </div>\n          <h1 className=\"brand-title\">MindGuide</h1>\n          <p className=\"brand-tagline\">您的心灵健康伙伴</p>\n        </div>\n\n        <h2>{isLogin ? '欢迎回来' : '加入我们'}</h2>\n        \n        {/* 步骤指示器 */}\n        <StepIndicator \n          currentStep={formProgress === 100 ? 1 : 0} \n          steps={isLogin ? ['填写信息', '完成登录'] : ['创建账号', '开始使用']} \n        />\n        \n        {/* 进度条 */}\n        <div className=\"form-progress\">\n          <div className=\"progress-track\">\n            <div \n              className=\"progress-fill\" \n              style={{ width: `${formProgress}%` }}\n            ></div>\n          </div>\n          <span className=\"progress-text\">{formProgress}% 完成</span>\n        </div>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        \n        <form onSubmit={handleSubmit} onKeyDown={handleKeyDown}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">用户名</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              ref={usernameRef}\n              value={username}\n              onChange={(e) => handleInputChange('username', e.target.value)}\n              onBlur={() => handleBlur('username')}\n              required\n              placeholder=\"请输入您的用户名\"\n              className={touched.username && formErrors.username ? 'error' : ''}\n              aria-invalid={touched.username && formErrors.username ? 'true' : 'false'}\n              aria-describedby={touched.username && formErrors.username ? 'username-error' : undefined}\n              autoComplete=\"username\"\n            />\n            <div className=\"input-icon\">\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M10 9C11.1046 9 12 8.10457 12 7C12 5.89543 11.1046 5 10 5C8.89543 5 8 5.89543 8 7C8 8.10457 8.89543 9 10 9Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n                <path d=\"M10 12C7.79086 12 6 13.7909 6 16H14C14 13.7909 12.2091 12 10 12Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n              </svg>\n            </div>\n            {touched.username && formErrors.username && (\n              <div className=\"field-error\" id=\"username-error\">\n                {formErrors.username}\n              </div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">密码</label>\n            <div className=\"password-input-wrapper\">\n              <input\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                value={password}\n                onChange={(e) => handleInputChange('password', e.target.value)}\n                onBlur={() => handleBlur('password')}\n                required\n                placeholder=\"请输入您的密码\"\n                className={touched.password && formErrors.password ? 'error' : ''}\n                aria-invalid={touched.password && formErrors.password ? 'true' : 'false'}\n                aria-describedby={touched.password && formErrors.password ? 'password-error' : undefined}\n                autoComplete={isLogin ? 'current-password' : 'new-password'}\n              />\n              <button\n                type=\"button\"\n                className=\"password-toggle\"\n                onClick={() => setShowPassword(!showPassword)}\n                aria-label={showPassword ? '隐藏密码' : '显示密码'}\n                tabIndex=\"-1\"\n              >\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  {showPassword ? (\n                    <>\n                      <path d=\"M10 12C11.1046 12 12 11.1046 12 10C12 8.89543 11.1046 8 10 8C8.89543 8 8 8.89543 8 10C8 11.1046 8.89543 12 10 12Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n                      <path d=\"M2 10C2 10 5 5 10 5C15 5 18 10 18 10C18 10 15 15 10 15C5 15 2 10 2 10Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n                    </>\n                  ) : (\n                    <>\n                      <path d=\"M10 12C11.1046 12 12 11.1046 12 10C12 8.89543 11.1046 8 10 8C8.89543 8 8 8.89543 8 10C8 11.1046 8.89543 12 10 12Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n                      <path d=\"M3 10C3 10 5.5 6 10 6C14.5 6 17 10 17 10C17 10 14.5 14 10 14C5.5 14 3 10 3 10Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n                      <path d=\"M2 2L18 18\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n                    </>\n                  )}\n                </svg>\n              </button>\n            </div>\n            <div className=\"input-icon\">\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M5 9V7C5 4.23858 7.23858 2 10 2C12.7614 2 15 4.23858 15 7V9M10 14C10.5523 14 11 13.5523 11 13C11 12.4477 10.5523 12 10 12C9.44772 12 9 12.4477 9 13C9 13.5523 9.44772 14 10 14Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n                <rect x=\"3\" y=\"9\" width=\"14\" height=\"9\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"1.5\"/>\n              </svg>\n            </div>\n            {touched.password && formErrors.password && (\n              <div className=\"field-error\" id=\"password-error\">\n                {formErrors.password}\n              </div>\n            )}\n          </div>\n\n          {isLogin && (\n            <div className=\"form-group remember-me\">\n              <label className=\"checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={rememberMe}\n                  onChange={(e) => setRememberMe(e.target.checked)}\n                />\n                <span className=\"checkmark\"></span>\n                记住我\n              </label>\n            </div>\n          )}\n\n          {!isLogin && (\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">邮箱地址</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => handleInputChange('email', e.target.value)}\n                onBlur={() => handleBlur('email')}\n                placeholder=\"请输入您的邮箱（可选）\"\n                className={touched.email && formErrors.email ? 'error' : ''}\n                aria-invalid={touched.email && formErrors.email ? 'true' : 'false'}\n                aria-describedby={touched.email && formErrors.email ? 'email-error' : undefined}\n                autoComplete=\"email\"\n              />\n              <div className=\"input-icon\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M3 8L10 13L17 8M3 5H17C17.5523 5 18 5.44772 18 6V14C18 14.5523 17.5523 15 17 15H3C2.44772 15 2 14.5523 2 14V6C2 5.44772 2.44772 5 3 5Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </div>\n              {touched.email && formErrors.email && (\n                <div className=\"field-error\" id=\"email-error\">\n                  {formErrors.email}\n                </div>\n              )}\n            </div>\n          )}\n\n          <button \n            type=\"submit\" \n            disabled={loading || !isFormValid()} \n            className=\"submit-btn\"\n            aria-busy={loading}\n          >\n            {loading && <div className=\"loading-spinner\"></div>}\n            {loading ? '处理中...' : (isLogin ? '开始心灵之旅' : '开启新篇章')}\n          </button>\n        </form>\n\n        {/* 社交登录选项 */}\n        <div className=\"social-login-toggle\">\n          <button \n            type=\"button\"\n            className=\"toggle-social-btn\"\n            onClick={() => setShowSocialLogin(!showSocialLogin)}\n          >\n            {showSocialLogin ? '收起社交登录' : '更多登录方式'}\n            <span className={`toggle-icon ${showSocialLogin ? 'up' : 'down'}`}>▼</span>\n          </button>\n        </div>\n\n        {showSocialLogin && <SocialLogin onSocialLogin={handleSocialLogin} />}\n\n        <div className=\"switch-mode\">\n          <p>\n            {isLogin ? '还没有账号？' : '已有账号？'}\n            <button \n              type=\"button\" \n              className=\"switch-btn\"\n              onClick={handleModeSwitch}\n            >\n              {isLogin ? '立即注册' : '立即登录'}\n            </button>\n          </p>\n        </div>\n\n        {/* 演示信息切换按钮 */}\n        <div className=\"demo-info-toggle\">\n          <button \n            type=\"button\"\n            className=\"toggle-demo-btn\"\n            onClick={() => setShowDemoInfo(!showDemoInfo)}\n          >\n            {showDemoInfo ? '隐藏演示信息' : '显示演示账号'}\n            <span className={`toggle-icon ${showDemoInfo ? 'up' : 'down'}`}>▼</span>\n          </button>\n        </div>\n\n        {/* 增强的演示信息 */}\n        {showDemoInfo && <EnhancedDemoInfo />}\n        \n        {/* 品牌徽章 */}\n        <BrandBadges />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/InitialOptions.jsx",["154","155"],"import React from 'react';\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport './InitialOptions.css';\n\nconst InitialOptions = (props) => {\n  const { setState, actionProvider, initialChoices } = props;\n\n  const handleChoice = (choice) => {\n    // Create client message for user's choice\n    const message = actionProvider.createClientMessage(choice);\n    actionProvider.addMessageToBotState(message);\n\n    // Send the choice to the backend\n    actionProvider.sendRequest({\n      user_id: props.state.userState,\n      session_id: props.state.sessionID,\n      user_choice: choice,\n      input_type: \"initial_choice\"\n    });\n  };\n\n  return (\n    <div className=\"initial-options-container\">\n      <div className=\"options-grid\">\n        {initialChoices.map((choice, index) => (\n          <button\n            key={index}\n            className=\"option-button\"\n            onClick={() => handleChoice(choice)}\n          >\n            {choice}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default InitialOptions;","/Users/liuyanjun/therapy_agent/frontend/src/components/WaveBackground.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/ParticleBackground.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/BrandBadges.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/UIElements.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/EnhancedDemoInfo.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/SocialLogin.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/LoginSimple.js",["156"],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"165","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":30},{"ruleId":"161","severity":1,"message":"166","line":7,"column":10,"nodeType":"163","messageId":"164","endLine":7,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":84,"column":6,"nodeType":"169","endLine":84,"endColumn":8,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"171","line":100,"column":29,"nodeType":"163","endLine":100,"endColumn":40},{"ruleId":"161","severity":1,"message":"165","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":30},{"ruleId":"161","severity":1,"message":"172","line":6,"column":11,"nodeType":"163","messageId":"164","endLine":6,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":278,"column":15,"nodeType":"175","endLine":278,"endColumn":51},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'createChatBotMessage' is defined but never used.","'LoadingSpinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'validationRules'. Either include it or remove the dependency array.","ArrayExpression",["178"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'setState' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [validationRules]",{"range":"181","text":"182"},[2745,2747],"[validationRules]"]