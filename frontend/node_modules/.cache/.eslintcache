[{"/Users/liuyanjun/Downloads/satbot-master/view/src/index.js":"1","/Users/liuyanjun/Downloads/satbot-master/view/src/App.js":"2","/Users/liuyanjun/Downloads/satbot-master/view/src/MessageParser.js":"3","/Users/liuyanjun/Downloads/satbot-master/view/src/config.js":"4","/Users/liuyanjun/Downloads/satbot-master/view/src/ActionProvider.js":"5","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ProtocolOptions.jsx":"6","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ContinueOptions.jsx":"7","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/FeedbackOptions.jsx":"8","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EmotionOptions.jsx":"9","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx":"10","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoOptions.jsx":"11","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EventOptions.jsx":"12","/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/Options/Options.jsx":"13","/Users/liuyanjun/therapy_agent/frontend/src/index.js":"14","/Users/liuyanjun/therapy_agent/frontend/src/App.js":"15","/Users/liuyanjun/therapy_agent/frontend/src/ActionProvider.js":"16","/Users/liuyanjun/therapy_agent/frontend/src/config.js":"17","/Users/liuyanjun/therapy_agent/frontend/src/MessageParser.js":"18","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ProtocolOptions.jsx":"19","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoOptions.jsx":"20","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ContinueOptions.jsx":"21","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/FeedbackOptions.jsx":"22","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EventOptions.jsx":"23","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx":"24","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EmotionOptions.jsx":"25","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/Options/Options.jsx":"26","/Users/liuyanjun/therapy_agent/frontend/src/Login.js":"27","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/InitialOptions.jsx":"28","/Users/liuyanjun/therapy_agent/frontend/src/components/WaveBackground.js":"29","/Users/liuyanjun/therapy_agent/frontend/src/components/ParticleBackground.js":"30","/Users/liuyanjun/therapy_agent/frontend/src/components/BrandBadges.js":"31","/Users/liuyanjun/therapy_agent/frontend/src/components/UIElements.js":"32","/Users/liuyanjun/therapy_agent/frontend/src/components/EnhancedDemoInfo.js":"33","/Users/liuyanjun/therapy_agent/frontend/src/components/SocialLogin.js":"34","/Users/liuyanjun/therapy_agent/frontend/src/TestChat.js":"35","/Users/liuyanjun/therapy_agent/frontend/src/MinimalChatTest.js":"36","/Users/liuyanjun/therapy_agent/frontend/src/utils/environment.js":"37"},{"size":261,"mtime":1686244282000,"results":"38","hashOfConfig":"39"},{"size":513,"mtime":1686244282000,"results":"40","hashOfConfig":"39"},{"size":2538,"mtime":1686244282000,"results":"41","hashOfConfig":"39"},{"size":3051,"mtime":1686244282000,"results":"42","hashOfConfig":"39"},{"size":7277,"mtime":1686244282000,"results":"43","hashOfConfig":"39"},{"size":704,"mtime":1686244282000,"results":"44","hashOfConfig":"39"},{"size":407,"mtime":1686244282000,"results":"45","hashOfConfig":"39"},{"size":801,"mtime":1686244282000,"results":"46","hashOfConfig":"39"},{"size":1221,"mtime":1686244282000,"results":"47","hashOfConfig":"39"},{"size":699,"mtime":1686244282000,"results":"48","hashOfConfig":"39"},{"size":583,"mtime":1686244282000,"results":"49","hashOfConfig":"39"},{"size":607,"mtime":1686244282000,"results":"50","hashOfConfig":"39"},{"size":684,"mtime":1686244282000,"results":"51","hashOfConfig":"39"},{"size":261,"mtime":1686244282000,"results":"52","hashOfConfig":"53"},{"size":4877,"mtime":1756126045350,"results":"54","hashOfConfig":"53"},{"size":10817,"mtime":1756118387500,"results":"55","hashOfConfig":"53"},{"size":3088,"mtime":1756105234363,"results":"56","hashOfConfig":"53"},{"size":2712,"mtime":1756113231248,"results":"57","hashOfConfig":"53"},{"size":704,"mtime":1686244282000,"results":"58","hashOfConfig":"53"},{"size":583,"mtime":1686244282000,"results":"59","hashOfConfig":"53"},{"size":407,"mtime":1686244282000,"results":"60","hashOfConfig":"53"},{"size":801,"mtime":1686244282000,"results":"61","hashOfConfig":"53"},{"size":607,"mtime":1686244282000,"results":"62","hashOfConfig":"53"},{"size":699,"mtime":1686244282000,"results":"63","hashOfConfig":"53"},{"size":1221,"mtime":1686244282000,"results":"64","hashOfConfig":"53"},{"size":684,"mtime":1686244282000,"results":"65","hashOfConfig":"53"},{"size":11732,"mtime":1756118405314,"results":"66","hashOfConfig":"53"},{"size":1415,"mtime":1756105208782,"results":"67","hashOfConfig":"53"},{"size":2999,"mtime":1756091917631,"results":"68","hashOfConfig":"53"},{"size":5544,"mtime":1756091903710,"results":"69","hashOfConfig":"53"},{"size":3881,"mtime":1756092273943,"results":"70","hashOfConfig":"53"},{"size":2330,"mtime":1756091990076,"results":"71","hashOfConfig":"53"},{"size":6530,"mtime":1756092324426,"results":"72","hashOfConfig":"53"},{"size":4023,"mtime":1756092134855,"results":"73","hashOfConfig":"53"},{"size":3059,"mtime":1756105504381,"results":"74","hashOfConfig":"53"},{"size":6706,"mtime":1756118436025,"results":"75","hashOfConfig":"53"},{"size":1764,"mtime":1756118358494,"results":"76","hashOfConfig":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iqtqvg",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1i2ped5",{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/liuyanjun/Downloads/satbot-master/view/src/index.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/App.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/MessageParser.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/config.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/ActionProvider.js",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ProtocolOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/ContinueOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/FeedbackOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EmotionOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/YesNoOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/GeneralOptions/EventOptions.jsx",[],"/Users/liuyanjun/Downloads/satbot-master/view/src/widgets/options/Options/Options.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/index.js",[],["156","157"],"/Users/liuyanjun/therapy_agent/frontend/src/App.js",["158"],"/Users/liuyanjun/therapy_agent/frontend/src/ActionProvider.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/config.js",["159"],"// Config starter code\r\nimport React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport YesNoOptions from \"./widgets/options/GeneralOptions/YesNoOptions\";\r\nimport ProtocolOptions from \"./widgets/options/GeneralOptions/ProtocolOptions\";\r\nimport ContinueOptions from \"./widgets/options/GeneralOptions/ContinueOptions\";\r\nimport FeedbackOptions from \"./widgets/options/GeneralOptions/FeedbackOptions\";\r\nimport EmotionOptions from \"./widgets/options/GeneralOptions/EmotionOptions\";\r\nimport EventOptions from \"./widgets/options/GeneralOptions/EventOptions\";\r\nimport YesNoProtocolOptions from \"./widgets/options/GeneralOptions/YesNoProtocolsOptions\";\r\nimport InitialOptions from \"./widgets/options/GeneralOptions/InitialOptions\";\r\n\r\n// import Kai from \"./Kai.png\"\r\n\r\nconst botName = \"MindGuide\";\r\n\r\n// export const getPersona = () => {\r\n\r\n//   return <img src={Kai} width=\"50\" height=\"50\" alt=\"\"/>;\r\n\r\n// };\r\n\r\n\r\nconst config = {\r\n  botName: botName,\r\n  initialMessages: [], // Will be populated dynamically based on login status\r\n\r\n  state: {\r\n    userState: null,\r\n    username: null,\r\n    password: null,\r\n    sessionID: null,\r\n    protocols: [],\r\n    askingForProtocol: false,\r\n    initialChoices: [],\r\n    inputType: null,\r\n    currentOptionToShow: null,\r\n    messages: []\r\n  },\r\n\r\n  customComponents: {\r\n    header: () => <div style={{height: '15px', fontFamily: 'Trebuchet MS', fontSize: \"1em\", textAlign: \"center\", color: '#fff', paddingTop: '1em', paddingBottom: '1em'}}>MindGuide</div>,\r\n    // botAvatar: (props) => <div class=\"react-chatbot-kit-chat-bot-avatar-container\" style={{fontFamily: 'Arial'}}>\r\n    //   {getPersona()} </div>\r\n    },\r\n\r\n  widgets: [\r\n    {\r\n      widgetName: \"YesNo\",\r\n      widgetFunc: (props) => <YesNoOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Continue\",\r\n      widgetFunc: (props) => <ContinueOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Emotion\",\r\n      widgetFunc: (props) => <EmotionOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Feedback\",\r\n      widgetFunc: (props) => <FeedbackOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Protocol\",\r\n      widgetFunc: (props) => <ProtocolOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\", \"protocols\", \"askingForProtocol\"],\r\n    },\r\n    {\r\n      widgetName: \"YesNoProtocols\",\r\n      widgetFunc: (props) => <YesNoProtocolOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"RecentDistant\",\r\n      widgetFunc: (props) => <EventOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"InitialOptions\",\r\n      widgetFunc: (props) => <InitialOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\", \"initialChoices\", \"inputType\"],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default config;\r\n","/Users/liuyanjun/therapy_agent/frontend/src/MessageParser.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ProtocolOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/ContinueOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/FeedbackOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EventOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/YesNoProtocolsOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/EmotionOptions.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/Options/Options.jsx",[],"/Users/liuyanjun/therapy_agent/frontend/src/Login.js",["160"],"import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { getEnvironment } from './utils/environment';\nimport './Login.css';\n\nconst Login = ({ onLogin, onRegister }) => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const { apiBaseUrl } = getEnvironment();\n  const usernameRef = useRef(null);\n\n  // 自动聚焦用户名输入框\n  useEffect(() => {\n    if (usernameRef.current) {\n      usernameRef.current.focus();\n    }\n  }, []);\n\n  // 检查本地存储中的记住用户名\n  useEffect(() => {\n    const savedUsername = localStorage.getItem('rememberedUsername');\n    if (savedUsername) {\n      setUsername(savedUsername);\n      setRememberMe(true);\n    }\n  }, []);\n\n  // 表单验证\n  const validateForm = () => {\n    if (!username.trim()) {\n      setError('请输入用户名');\n      return false;\n    }\n    if (!password) {\n      setError('请输入密码');\n      return false;\n    }\n    if (!isLogin && email && !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError('请输入有效的邮箱地址');\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    if (!validateForm()) return;\n\n    setLoading(true);\n\n    try {\n      if (isLogin) {\n        // 登录逻辑\n        const response = await axios.post(`${apiBaseUrl}/api/login`, {\n          user_info: { username, password }\n        });\n\n        if (response.data.success && response.data.validID) {\n          // 处理记住我功能\n          if (rememberMe) {\n            localStorage.setItem('rememberedUsername', username);\n          } else {\n            localStorage.removeItem('rememberedUsername');\n          }\n\n          onLogin({\n            userID: response.data.userID,\n            sessionID: response.data.sessionID,\n            token: response.data.token,\n            username: username,\n            model_prompt: response.data.model_prompt,\n            choices: response.data.choices\n          });\n        } else {\n          setError(response.data.error || '登录失败');\n        }\n      } else {\n        // 注册逻辑\n        const response = await axios.post(`${apiBaseUrl}/api/register`, {\n          user_info: { username, password, email }\n        });\n\n        if (response.data.success) {\n          // 自动登录\n          const loginResponse = await axios.post(`${apiBaseUrl}/api/login`, {\n            user_info: { username, password }\n          });\n\n          if (loginResponse.data.success && loginResponse.data.validID) {\n            onRegister({\n              userID: loginResponse.data.userID,\n              sessionID: loginResponse.data.sessionID,\n              token: loginResponse.data.token,\n              username: username\n            });\n          }\n        } else {\n          setError(response.data.error || '注册失败');\n        }\n      }\n    } catch (error) {\n      console.error('Authentication error:', error);\n      setError(error.response?.data?.error || '网络错误，请稍后重试');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    // 清除错误信息\n    if (error) setError('');\n    \n    switch (field) {\n      case 'username':\n        setUsername(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const switchMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setUsername('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return (\n    <div className=\"login-container\">\n      {/* 背景装饰 */}\n      <div className=\"background-shapes\">\n        <div className=\"shape shape-1\"></div>\n        <div className=\"shape shape-2\"></div>\n        <div className=\"shape shape-3\"></div>\n        <div className=\"shape shape-4\"></div>\n        <div className=\"shape shape-5\"></div>\n      </div>\n\n      <div className=\"login-form\">\n        {/* 品牌标识 */}\n        <div className=\"brand-header\">\n          <div className=\"brand-icon\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12 2L2 7V12C2 16.5 4.23 20.68 12 22C19.77 20.68 22 16.5 22 12V7L12 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M12 8V16\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M8 12H16\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </div>\n          <h1 className=\"brand-title\">MindGuide</h1>\n          <p className=\"brand-subtitle\">您的心灵健康伙伴</p>\n        </div>\n\n        {/* 登录表单 */}\n        <form onSubmit={handleSubmit} className=\"form-container\">\n          <h2 className=\"form-title\">\n            {isLogin ? '欢迎回来' : '加入我们'}\n          </h2>\n          <p className=\"form-subtitle\">\n            {isLogin ? '登录您的账户继续治疗之旅' : '创建账户开始您的心灵疗愈'}\n          </p>\n\n          {error && (\n            <div className=\"error-message\">\n              <svg className=\"error-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n              {error}\n            </div>\n          )}\n\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">用户名</label>\n            <div className=\"input-wrapper\">\n              <input\n                ref={usernameRef}\n                id=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => handleInputChange('username', e.target.value)}\n                placeholder=\"请输入用户名\"\n                className=\"form-input\"\n                disabled={loading}\n              />\n              <svg className=\"input-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">密码</label>\n            <div className=\"input-wrapper\">\n              <input\n                id=\"password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={(e) => handleInputChange('password', e.target.value)}\n                placeholder=\"请输入密码\"\n                className=\"form-input\"\n                disabled={loading}\n              />\n              <svg className=\"input-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <button\n                type=\"button\"\n                className=\"password-toggle\"\n                onClick={togglePasswordVisibility}\n                disabled={loading}\n              >\n                {showPassword ? (\n                  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n                    <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\n                  </svg>\n                ) : (\n                  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\" />\n                    <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n                  </svg>\n                )}\n              </button>\n            </div>\n          </div>\n\n          {!isLogin && (\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">邮箱 (可选)</label>\n              <div className=\"input-wrapper\">\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => handleInputChange('email', e.target.value)}\n                  placeholder=\"请输入邮箱\"\n                  className=\"form-input\"\n                  disabled={loading}\n                />\n                <svg className=\"input-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                  <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                </svg>\n              </div>\n            </div>\n          )}\n\n          {isLogin && (\n            <div className=\"form-options\">\n              <label className=\"checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={rememberMe}\n                  onChange={(e) => setRememberMe(e.target.checked)}\n                  disabled={loading}\n                />\n                <span className=\"checkbox-text\">记住我</span>\n              </label>\n              <a href=\"#\" className=\"forgot-link\">忘记密码？</a>\n            </div>\n          )}\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"submit-btn\"\n          >\n            {loading ? (\n              <div className=\"loading-spinner\">\n                <div className=\"spinner\"></div>\n                <span>处理中...</span>\n              </div>\n            ) : (\n              <span>{isLogin ? '登录' : '注册'}</span>\n            )}\n          </button>\n        </form>\n\n        {/* 切换登录/注册 */}\n        <div className=\"switch-mode\">\n          <p>\n            {isLogin ? '还没有账号？' : '已有账号？'}\n            <button\n              type=\"button\"\n              className=\"switch-btn\"\n              onClick={switchMode}\n              disabled={loading}\n            >\n              {isLogin ? '立即注册' : '立即登录'}\n            </button>\n          </p>\n        </div>\n\n        {/* 演示信息 */}\n        <div className=\"demo-info\">\n          <h4>演示账号</h4>\n          <div className=\"demo-accounts\">\n            <div className=\"demo-account\">\n              <strong>用户名:</strong> user1\n              <br />\n              <strong>密码:</strong> ph6n76gec9\n            </div>\n            <div className=\"demo-account\">\n              <strong>用户名:</strong> user2\n              <br />\n              <strong>密码:</strong> ph6n76gec9\n            </div>\n          </div>\n          <p className=\"demo-note\">\n            可使用 user1 到 user30 的任意账号进行测试\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/InitialOptions.jsx",["161","162"],"import React from 'react';\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport './InitialOptions.css';\n\nconst InitialOptions = (props) => {\n  console.log('InitialOptions received props:', props);\n  const { setState, actionProvider, initialChoices, state } = props;\n\n  const handleChoice = (choice) => {\n    console.log('Initial choice selected:', choice);\n    console.log('Current state:', state);\n    \n    // Create client message for user's choice\n    const message = actionProvider.createClientMessage(choice);\n    actionProvider.addMessageToBotState(message);\n\n    // Send the choice to the backend\n    const choice_info = {\n      user_id: state.userState,\n      session_id: state.sessionID,\n      user_choice: choice,\n      input_type: initialChoices\n    };\n    \n    console.log('Sending choice_info:', choice_info);\n    actionProvider.sendRequest(choice_info);\n  };\n\n  if (!initialChoices || initialChoices.length === 0) {\n    console.log('No initial choices available');\n    return null;\n  }\n\n  return (\n    <div className=\"initial-options-container\">\n      <div className=\"options-grid\">\n        {initialChoices.map((choice, index) => (\n          <button\n            key={index}\n            className=\"option-button\"\n            onClick={() => handleChoice(choice)}\n          >\n            {choice}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default InitialOptions;","/Users/liuyanjun/therapy_agent/frontend/src/components/WaveBackground.js",[],["163","164"],"/Users/liuyanjun/therapy_agent/frontend/src/components/ParticleBackground.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/BrandBadges.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/UIElements.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/EnhancedDemoInfo.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/components/SocialLogin.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/TestChat.js",["165"],"/Users/liuyanjun/therapy_agent/frontend/src/MinimalChatTest.js",[],"/Users/liuyanjun/therapy_agent/frontend/src/utils/environment.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":19,"nodeType":"172","messageId":"173","endLine":2,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":279,"column":15,"nodeType":"176","endLine":279,"endColumn":51},{"ruleId":"170","severity":1,"message":"171","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":30},{"ruleId":"170","severity":1,"message":"177","line":7,"column":11,"nodeType":"172","messageId":"173","endLine":7,"endColumn":19},{"ruleId":"166","replacedBy":"178"},{"ruleId":"168","replacedBy":"179"},{"ruleId":"170","severity":1,"message":"180","line":53,"column":22,"nodeType":"172","messageId":"173","endLine":53,"endColumn":35},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'createChatBotMessage' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setState' is assigned a value but never used.",["181"],["182"],"'setChatConfig' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]