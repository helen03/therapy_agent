{"ast":null,"code":"var _jsxFileName = \"/Users/liuyanjun/therapy_agent/frontend/src/components/UIElements.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProgressBar = ({\n  progress,\n  animated = true\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `progress-bar ${animated ? 'animated' : ''}`,\n      style: {\n        width: `${progress}%`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-glow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-label\",\n      children: [Math.round(progress), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProgressBar;\n\nconst LoadingSpinner = ({\n  size = 'medium',\n  text = '加载中...'\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `loading-spinner-wrapper ${size}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = LoadingSpinner;\n\nconst StepIndicator = ({\n  currentStep,\n  steps\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-indicator\",\n    children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `step ${index <= currentStep ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-number\",\n        children: index < currentStep ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"check-icon\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this) : index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-label\",\n        children: step\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-connector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 40\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = StepIndicator;\n\nconst SkeletonLoader = ({\n  type = 'input',\n  lines = 1\n}) => {\n  if (type === 'input') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeleton-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton-label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (type === 'button') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeleton-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (type === 'text') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: Array.from({\n        length: lines\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton-text\",\n        style: {\n          width: `${80 - index * 10}%`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n  return null;\n};\n\n_c4 = SkeletonLoader;\nexport { ProgressBar, LoadingSpinner, StepIndicator, SkeletonLoader };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"LoadingSpinner\");\n$RefreshReg$(_c3, \"StepIndicator\");\n$RefreshReg$(_c4, \"SkeletonLoader\");","map":{"version":3,"sources":["/Users/liuyanjun/therapy_agent/frontend/src/components/UIElements.js"],"names":["React","ProgressBar","progress","animated","width","Math","round","LoadingSpinner","size","text","StepIndicator","currentStep","steps","map","step","index","length","SkeletonLoader","type","lines","Array","from","_"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst ProgressBar = ({ progress, animated = true }) => {\n  return (\n    <div className=\"progress-bar-container\">\n      <div \n        className={`progress-bar ${animated ? 'animated' : ''}`}\n        style={{ width: `${progress}%` }}\n      >\n        <div className=\"progress-glow\"></div>\n      </div>\n      <div className=\"progress-label\">{Math.round(progress)}%</div>\n    </div>\n  );\n};\n\nconst LoadingSpinner = ({ size = 'medium', text = '加载中...' }) => {\n  return (\n    <div className={`loading-spinner-wrapper ${size}`}>\n      <div className=\"spinner\">\n        <div className=\"spinner-circle\"></div>\n        <div className=\"spinner-circle\"></div>\n        <div className=\"spinner-circle\"></div>\n      </div>\n      {text && <div className=\"spinner-text\">{text}</div>}\n    </div>\n  );\n};\n\nconst StepIndicator = ({ currentStep, steps }) => {\n  return (\n    <div className=\"step-indicator\">\n      {steps.map((step, index) => (\n        <div key={index} className={`step ${index <= currentStep ? 'active' : ''}`}>\n          <div className=\"step-number\">\n            {index < currentStep ? (\n              <svg className=\"check-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n            ) : (\n              index + 1\n            )}\n          </div>\n          <div className=\"step-label\">{step}</div>\n          {index < steps.length - 1 && <div className=\"step-connector\"></div>}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst SkeletonLoader = ({ type = 'input', lines = 1 }) => {\n  if (type === 'input') {\n    return (\n      <div className=\"skeleton-input\">\n        <div className=\"skeleton-label\"></div>\n        <div className=\"skeleton-field\"></div>\n      </div>\n    );\n  }\n  \n  if (type === 'button') {\n    return <div className=\"skeleton-button\"></div>;\n  }\n  \n  if (type === 'text') {\n    return (\n      <>\n        {Array.from({ length: lines }).map((_, index) => (\n          <div key={index} className=\"skeleton-text\" style={{ width: `${80 - index * 10}%` }}></div>\n        ))}\n      </>\n    );\n  }\n  \n  return null;\n};\n\nexport { ProgressBar, LoadingSpinner, StepIndicator, SkeletonLoader };"]},"metadata":{},"sourceType":"module"}