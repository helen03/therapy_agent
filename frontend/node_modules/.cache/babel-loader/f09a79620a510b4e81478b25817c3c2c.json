{"ast":null,"code":"var _jsxFileName = \"/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/InitialOptions.jsx\";\nimport React from 'react';\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport './InitialOptions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InitialOptions = props => {\n  const {\n    setState,\n    actionProvider,\n    initialChoices\n  } = props;\n\n  const handleChoice = choice => {\n    // Create client message for user's choice\n    const message = actionProvider.createClientMessage(choice);\n    actionProvider.addMessageToBotState(message); // Send the choice to the backend\n\n    actionProvider.sendRequest({\n      user_id: props.state.userState,\n      session_id: props.state.sessionID,\n      user_choice: choice,\n      input_type: \"initial_choice\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"initial-options-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-grid\",\n      children: initialChoices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"option-button\",\n        onClick: () => handleChoice(choice),\n        children: choice\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InitialOptions;\nexport default InitialOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitialOptions\");","map":{"version":3,"sources":["/Users/liuyanjun/therapy_agent/frontend/src/widgets/options/GeneralOptions/InitialOptions.jsx"],"names":["React","createChatBotMessage","InitialOptions","props","setState","actionProvider","initialChoices","handleChoice","choice","message","createClientMessage","addMessageToBotState","sendRequest","user_id","state","userState","session_id","sessionID","user_choice","input_type","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,cAAZ;AAA4BC,IAAAA;AAA5B,MAA+CH,KAArD;;AAEA,QAAMI,YAAY,GAAIC,MAAD,IAAY;AAC/B;AACA,UAAMC,OAAO,GAAGJ,cAAc,CAACK,mBAAf,CAAmCF,MAAnC,CAAhB;AACAH,IAAAA,cAAc,CAACM,oBAAf,CAAoCF,OAApC,EAH+B,CAK/B;;AACAJ,IAAAA,cAAc,CAACO,WAAf,CAA2B;AACzBC,MAAAA,OAAO,EAAEV,KAAK,CAACW,KAAN,CAAYC,SADI;AAEzBC,MAAAA,UAAU,EAAEb,KAAK,CAACW,KAAN,CAAYG,SAFC;AAGzBC,MAAAA,WAAW,EAAEV,MAHY;AAIzBW,MAAAA,UAAU,EAAE;AAJa,KAA3B;AAMD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGb,cAAc,CAACc,GAAf,CAAmB,CAACZ,MAAD,EAASa,KAAT,kBAClB;AAEE,QAAA,SAAS,EAAC,eAFZ;AAGE,QAAA,OAAO,EAAE,MAAMd,YAAY,CAACC,MAAD,CAH7B;AAAA,kBAKGA;AALH,SACOa,KADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhCD;;KAAMnB,c;AAkCN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport './InitialOptions.css';\n\nconst InitialOptions = (props) => {\n  const { setState, actionProvider, initialChoices } = props;\n\n  const handleChoice = (choice) => {\n    // Create client message for user's choice\n    const message = actionProvider.createClientMessage(choice);\n    actionProvider.addMessageToBotState(message);\n\n    // Send the choice to the backend\n    actionProvider.sendRequest({\n      user_id: props.state.userState,\n      session_id: props.state.sessionID,\n      user_choice: choice,\n      input_type: \"initial_choice\"\n    });\n  };\n\n  return (\n    <div className=\"initial-options-container\">\n      <div className=\"options-grid\">\n        {initialChoices.map((choice, index) => (\n          <button\n            key={index}\n            className=\"option-button\"\n            onClick={() => handleChoice(choice)}\n          >\n            {choice}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default InitialOptions;"]},"metadata":{},"sourceType":"module"}