{"ast":null,"code":"var _jsxFileName = \"/Users/liuyanjun/therapy_agent/frontend/src/components/WaveBackground.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WaveBackground = () => {\n  _s();\n\n  const waveRef = useRef(null);\n  useEffect(() => {\n    const canvas = waveRef.current;\n    const ctx = canvas.getContext('2d'); // 设置画布尺寸\n\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas); // 波浪参数\n\n    const waves = [{\n      y: canvas.height * 0.7,\n      length: 0.01,\n      amplitude: 30,\n      frequency: 0.01,\n      color: 'rgba(99, 102, 241, 0.1)',\n      speed: 0.02\n    }, {\n      y: canvas.height * 0.75,\n      length: 0.015,\n      amplitude: 25,\n      frequency: 0.015,\n      color: 'rgba(139, 92, 246, 0.08)',\n      speed: 0.025\n    }, {\n      y: canvas.height * 0.8,\n      length: 0.02,\n      amplitude: 20,\n      frequency: 0.02,\n      color: 'rgba(236, 72, 153, 0.06)',\n      speed: 0.03\n    }];\n    let time = 0;\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      waves.forEach((wave, index) => {\n        ctx.beginPath();\n        ctx.moveTo(0, canvas.height); // 绘制波浪\n\n        for (let x = 0; x <= canvas.width; x += 5) {\n          const y = wave.y + Math.sin(x * wave.length + time * wave.speed) * wave.amplitude;\n          ctx.lineTo(x, y);\n        }\n\n        ctx.lineTo(canvas.width, canvas.height);\n        ctx.lineTo(0, canvas.height);\n        ctx.closePath(); // 创建渐变填充\n\n        const gradient = ctx.createLinearGradient(0, wave.y - wave.amplitude, 0, canvas.height);\n        gradient.addColorStop(0, wave.color);\n        gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n        ctx.fillStyle = gradient;\n        ctx.fill(); // 添加波浪顶部发光效果\n\n        ctx.beginPath();\n\n        for (let x = 0; x <= canvas.width; x += 5) {\n          const y = wave.y + Math.sin(x * wave.length + time * wave.speed) * wave.amplitude;\n\n          if (x === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n\n        ctx.strokeStyle = wave.color.replace('0.1', '0.3').replace('0.08', '0.25').replace('0.06', '0.2');\n        ctx.lineWidth = 2;\n        ctx.shadowBlur = 10;\n        ctx.shadowColor = wave.color;\n        ctx.stroke();\n      });\n      time += 1;\n      requestAnimationFrame(animate);\n    };\n\n    animate();\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: waveRef,\n    className: \"wave-background\",\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: 2,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WaveBackground, \"rHrz2Qah0/t2r8Z/BmnJefhY/MU=\");\n\n_c = WaveBackground;\nexport default WaveBackground;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaveBackground\");","map":{"version":3,"sources":["/Users/liuyanjun/therapy_agent/frontend/src/components/WaveBackground.js"],"names":["React","useRef","useEffect","WaveBackground","waveRef","canvas","current","ctx","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","waves","y","length","amplitude","frequency","color","speed","time","animate","clearRect","forEach","wave","index","beginPath","moveTo","x","Math","sin","lineTo","closePath","gradient","createLinearGradient","addColorStop","fillStyle","fill","strokeStyle","replace","lineWidth","shadowBlur","shadowColor","stroke","requestAnimationFrame","removeEventListener","position","bottom","left","zIndex","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst WaveBackground = () => {\n  const waveRef = useRef(null);\n  \n  useEffect(() => {\n    const canvas = waveRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // 设置画布尺寸\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    \n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    \n    // 波浪参数\n    const waves = [\n      {\n        y: canvas.height * 0.7,\n        length: 0.01,\n        amplitude: 30,\n        frequency: 0.01,\n        color: 'rgba(99, 102, 241, 0.1)',\n        speed: 0.02\n      },\n      {\n        y: canvas.height * 0.75,\n        length: 0.015,\n        amplitude: 25,\n        frequency: 0.015,\n        color: 'rgba(139, 92, 246, 0.08)',\n        speed: 0.025\n      },\n      {\n        y: canvas.height * 0.8,\n        length: 0.02,\n        amplitude: 20,\n        frequency: 0.02,\n        color: 'rgba(236, 72, 153, 0.06)',\n        speed: 0.03\n      }\n    ];\n    \n    let time = 0;\n    \n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      waves.forEach((wave, index) => {\n        ctx.beginPath();\n        ctx.moveTo(0, canvas.height);\n        \n        // 绘制波浪\n        for (let x = 0; x <= canvas.width; x += 5) {\n          const y = wave.y + Math.sin(x * wave.length + time * wave.speed) * wave.amplitude;\n          ctx.lineTo(x, y);\n        }\n        \n        ctx.lineTo(canvas.width, canvas.height);\n        ctx.lineTo(0, canvas.height);\n        ctx.closePath();\n        \n        // 创建渐变填充\n        const gradient = ctx.createLinearGradient(0, wave.y - wave.amplitude, 0, canvas.height);\n        gradient.addColorStop(0, wave.color);\n        gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n        \n        ctx.fillStyle = gradient;\n        ctx.fill();\n        \n        // 添加波浪顶部发光效果\n        ctx.beginPath();\n        for (let x = 0; x <= canvas.width; x += 5) {\n          const y = wave.y + Math.sin(x * wave.length + time * wave.speed) * wave.amplitude;\n          if (x === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n        \n        ctx.strokeStyle = wave.color.replace('0.1', '0.3').replace('0.08', '0.25').replace('0.06', '0.2');\n        ctx.lineWidth = 2;\n        ctx.shadowBlur = 10;\n        ctx.shadowColor = wave.color;\n        ctx.stroke();\n      });\n      \n      time += 1;\n      requestAnimationFrame(animate);\n    };\n    \n    animate();\n    \n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n  \n  return (\n    <canvas\n      ref={waveRef}\n      className=\"wave-background\"\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 2,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default WaveBackground;"]},"metadata":{},"sourceType":"module"}